// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String?
  password String

  @@map("user")
}

model Driver {
  id   Int     @id @default(autoincrement())
  name String
  cpf  String?

  travel      Travel[]
  refuelling  Refuelling[]
  maintenance Maintenance[]

  @@map("driver")
}

model Truck {
  id      Int     @id @default(autoincrement())
  plate   String  @unique
  renavan String?

  maintenace Maintenance[]
  refuelling Refuelling[]
  travel     Travel[]

  @@map("truck")
}

model Route {
  id             Int     @id @default(autoincrement())
  origin         String
  destination    String
  suggestedPrice Decimal @map("suggested_price")

  @@map("route")
}

model Maintenance {
  id  Int    @id @default(autoincrement())
  obs String

  truck    Truck  @relation(fields: [truckId], references: [id])
  truckId  Int    @map("truck_id")
  driver   Driver @relation(fields: [driverId], references: [id])
  driverId Int    @map("driver_id")

  @@map("maintenance")
}

model Refuelling {
  id     Int      @id @default(autoincrement())
  liters Decimal
  cost   Decimal
  date   DateTime

  truck    Truck  @relation(fields: [truckId], references: [id])
  truckId  Int    @map("truck_id")
  driver   Driver @relation(fields: [driverId], references: [id])
  driverId Int    @map("driver_id")

  @@map("refuelling")
}

model Travel {
  id         Int      @id @default(autoincrement())
  urban      Boolean  @default(false)
  number     String   @unique
  date       DateTime
  prize      Decimal
  commission Decimal
  client     String?
  tollPrize  Decimal? @map("toll_prize")

  truck      Truck  @relation(fields: [truckPlate], references: [plate])
  truckPlate String @map("truck_plate")
  driver     Driver @relation(fields: [driverId], references: [id])
  driverId   Int    @map("driver_id")

  @@map("travel")
}
